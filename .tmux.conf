# No escape time for vi mode
set -sg escape-time 0

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# support logging out and back in
set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# split
unbind '"'
bind v split-window -h -c "#{pane_current_path}"

# split
unbind %
bind s split-window -v -c "#{pane_current_path}"

# bind c new-window -c "#{pane_current_path}" \; split-window -h -c "#{pane_current_path}" \; select-pane -L

# set pane colors - hilight the active pane
set-option -g pane-border-fg colour60 #base02
set-option -g pane-active-border-fg colour62 #base01

# # colorize messages in the command line
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange

# window navigation
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# kill current pane/window
bind-key q kill-pane
bind-key Q kill-window

# Reload key
unbind R
bind R source-file ~/.tmux.conf

# Bigger history
set -g history-limit 10000

# vi mode
set-window-option -g mode-keys vi

# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

# Enable mouse
# set -g mode-mouse on
# setw -g mouse-resize-pane on
# setw -g mouse-select-window on
# setw -g mouse-select-pane on

# vi-like visual copy
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# bind C-l send-keys 'C-l'

# shortcuts
# bind - split-window -l 20 -c "#{pane_current_path}"
# bind _ split-window -l 20 -c "#{pane_current_path}" node

# status bar
# set-option -g status on                # turn the status bar on
# set -g status-utf8 on                  # set utf-8 for the status bar
# set -g status-interval 2               # set update frequencey (default 15 seconds)
# set -g status-justify centre           # center window list for clarity
# # show session name, window & pane number, date and time on right side of status bar
# set -g status-right "%b %d %Y @ %l:%M %p"
# # set -g status-right-length 60
# # set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
# setw -g monitor-activity on
# set -g visual-activity on

# split automatically on startup
# split-window -h -c "#{pane_current_path}"
# select-pane -L

# control automatic window renaming
# set-window-option -g automatic-rename on # auto name
# setw -g automatic-rename

# list all paste buffers (default key is '#')
# bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
# bind-key p choose-buffer

# scrolling with terminal scroll bar
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Panes
# bind up resize-pane -U 5
# bind down resize-pane -D 5
# bind left resize-pane -L 5
# bind right resize-pane -R 5
# bind tab next-layout
# unbind C-o
# bind r rotate-window
# bind space select-pane -t:.+

# # Monitor Activity
# bind m set-window-option monitor-activity

# # enable wm window titles
# set-option -g set-titles on

# # wm window title string (uses statusbar variables)
# set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# # Patch for OS X pbpaste and pbcopy under tmux.
# set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# # color scheme (styled as vim-powerline)
# set -g status-left-length 52
# set -g status-right-length 451
# set -g status-fg white
# set -g status-bg colour234
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39
# set -g message-fg colour16
# set -g message-bg colour221
# set -g message-attr bold
# # set -g status-left '#[fg=colour235,bg=colour252,bold] â #S #[fg=colour252,bg=colour238,nobold]â®€#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]â®€'
# # set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
# # set -g window-status-current-format "#[fg=colour234,bg=colour39]â®€#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]â®€"

# # Pane resize in all four directions using vi bindings.
# # Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
# bind-key J resize-pane -D
# bind-key K resize-pane -U
# bind-key H resize-pane -L
# bind-key L resize-pane -R

# # easily toggle synchronization (mnemonic: e is for echo)
# # sends input to all panes in a given window.
# bind e setw synchronize-panes on
# bind E setw synchronize-panes off

# # Screen like binding for last window
# unbind l
# bind C-a last-window

# set -g default-command /usr/local/bin/fish
# set -g default-shell /usr/local/bin/fish